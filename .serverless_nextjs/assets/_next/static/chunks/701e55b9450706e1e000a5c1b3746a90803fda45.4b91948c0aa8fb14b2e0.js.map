{"version":3,"sources":["webpack://_N_E/./node_modules/intl-messageformat/lib/src/formatters.js","webpack://_N_E/./node_modules/@formatjs/intl/lib/src/utils.js","webpack://_N_E/./node_modules/react-intl/lib/src/components/injectIntl.js","webpack://_N_E/./node_modules/fast-memoize/src/index.js","webpack://_N_E/./node_modules/@formatjs/ecma402-abstract/lib/utils.js","webpack://_N_E/./node_modules/intl-messageformat/lib/src/error.js","webpack://_N_E/./node_modules/@formatjs/intl/lib/src/error.js","webpack://_N_E/./node_modules/intl-messageformat/node_modules/tslib/tslib.es6.js","webpack://_N_E/./node_modules/intl-messageformat/lib/src/core.js","webpack://_N_E/./node_modules/react-intl/lib/src/utils.js","webpack://_N_E/./node_modules/react-intl/node_modules/tslib/tslib.es6.js","webpack://_N_E/./node_modules/intl-messageformat-parser/lib/src/types.js","webpack://_N_E/./node_modules/@formatjs/intl/node_modules/tslib/tslib.es6.js","webpack://_N_E/./node_modules/intl-messageformat-parser/node_modules/tslib/tslib.es6.js","webpack://_N_E/./node_modules/intl-messageformat-parser/lib/src/skeleton.js","webpack://_N_E/./node_modules/intl-messageformat-parser/lib/src/parser.js","webpack://_N_E/./node_modules/intl-messageformat-parser/lib/src/normalize.js","webpack://_N_E/./node_modules/intl-messageformat-parser/lib/index.js"],"names":["PART_TYPE","isFormatXMLElementFn","el","formatToParts","els","locales","formatters","formats","values","currentPluralValue","originalMessage","length","type","value","result","_i","els_1","push","getNumberFormat","format","varName","String","style","date","parsedOptions","undefined","getDateTimeFormat","time","number","scale","children","value_1","formatFn","chunks","map","p","Array","isArray","apply","c","opt","options","other","Object","keys","Intl","PluralRules","rule","getPluralRules","pluralType","select","offset","parts","reduce","all","part","lastPart","mergeLiteral","filterProps","props","whitelist","defaults","filtered","name","DEFAULT_INTL_CONFIG","messages","timeZone","defaultLocale","defaultFormats","onError","error","createIntlCache","dateTime","message","relativeTime","pluralRules","list","displayNames","createFastMemoizeCache","store","create","has","key","get","set","memoizeIntl","createFormatters","cache","RelativeTimeFormat","ListFormat","DisplayNames","_a","args","arguments","DateTimeFormat","bind","strategy","strategies","variadic","NumberFormat","getMessageFormat","overrideFormats","opts","getRelativeTimeFormat","getListFormat","getDisplayNames","getNamedFormat","formatType","default","IntlContext","Provider","Consumer","Context","monadic","fn","serializer","arg","cacheKey","computedValue","call","this","prototype","slice","assemble","context","serialize","strategyDefault","serializerDefault","JSON","stringify","ObjectWithoutPrototypeCache","cacheDefault","module","exports","invariant","condition","Err","Error","ErrorCode","FormatError","_super","msg","code","_this","toString","InvalidValueError","variableId","join","InvalidValueTypeError","MissingValueError","IntlErrorCode","IntlError","exception","stack","captureStackTrace","UnsupportedFormatterError","InvalidConfigError","MissingDataError","MessageFormatError","locale","descriptor","id","defaultMessage","description","MissingTranslationError","extendStatics","d","b","setPrototypeOf","__proto__","hasOwnProperty","__extends","TypeError","__","constructor","__assign","assign","t","s","i","n","__spreadArrays","il","r","k","a","j","jl","mergeConfigs","defaultConfig","configs","c1","c2","IntlMessageFormat","formatterCache","ast","resolvedOptions","supportedLocalesOf","getAst","__parse","normalizeHashtagInPlural","ignoreTag","defineProperty","memoizedDefaultLocale","enumerable","configurable","currency","percent","short","month","day","year","medium","long","full","weekday","hour","minute","second","timeZoneName","invariantIntlContext","intl","textComponent","assignUniqueKeysToParts","formatXMLElementFn","toArray","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","TYPE","SKELETON_TYPE","isLiteralElement","literal","isArgumentElement","argument","isNumberElement","isDateElement","isTimeElement","isSelectElement","isPluralElement","plural","isPoundElement","pound","isTagElement","tag","isNumberSkeleton","isDateTimeSkeleton","DATE_TIME_REGEX","parseDateTimeSkeleton","skeleton","replace","match","len","era","RangeError","hour12","hourCycle","FRACTION_PRECISION_REGEX","SIGNIFICANT_PRECISION_REGEX","parseSignificantPrecision","str","_","g1","g2","minimumSignificantDigits","maximumSignificantDigits","parseSign","signDisplay","currencySign","parseNotationOptions","signOpts","parseNumberSkeleton","tokens","tokens_1","token","stem","useGrouping","maximumFractionDigits","unit","notation","compactDisplay","currencyDisplay","unitDisplay","parseFloat","test","g3","g4","g5","minimumFractionDigits","SyntaxError","expected","found","location","buildMessage","hex","ch","charCodeAt","toUpperCase","literalEscape","classEscape","describeExpectation","expectation","text","escapedParts","inverted","expected1","descriptions","sort","describeExpected","found1","pegParse","input","peg$result","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c3","peg$c4","peg$literalExpectation","peg$c5","peg$c9","peg$c11","peg$otherExpectation","peg$c14","peg$c17","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c27","peg$c28","peg$c29","peg$classExpectation","peg$c30","peg$c31","peg$c33","peg$c35","peg$c38","peg$c39","peg$c42","messageCtx","pop","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","insertLocation","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c69","peg$c70","peg$c73","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","peg$c86","peg$c87","peg$c90","peg$c91","peg$c92","peg$c95","x","isInPluralOption","peg$c97","peg$c99","peg$c100","peg$c101","peg$c103","peg$c105","peg$c106","peg$c107","peg$c108","peg$c110","peg$c111","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","peg$computeLocation","location1","peg$buildSimpleError","text1","ignoreCase","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","end","peg$fail","peg$buildStructuredError","peg$parsemessage","s0","s1","peg$parsemessageElement","s2","s3","peg$parseselfClosingTag","peg$parseopeningTag","peg$parseclosingTag","open","close","peg$parsetagElement","peg$parsemessageText","messageText","peg$parseliteralElement","s5","peg$parse_","peg$parseargNameOrNumber","peg$parseargumentElement","s7","s9","s10","s11","s12","substr","peg$parsenumberSkeletonToken","shouldParseSkeleton","peg$parsenumberSkeleton","peg$parsenumberArgStyle","peg$parsenumberFormatElement","peg$parsedateTimeSkeletonLiteral","peg$parsedateTimeSkeletonPattern","pattern","peg$parsedateTimeSkeleton","peg$parsedateOrTimeArgStyle","peg$parsedateOrTimeFormatElement","peg$parsesimpleFormatElement","s13","s14","s15","peg$parsenumber","peg$parsepluralOption","optionLocation","peg$c68","peg$parsepluralElement","peg$parseselectOption","peg$c71","peg$parseselectElement","peg$parsepoundElement","peg$parsedoubleApostrophes","peg$parsequotedString","peg$parseunquotedString","peg$parsenonTagStartingAngleBracket","s4","peg$parsevalidTag","peg$parsenumberSkeletonId","peg$parsewhiteSpace","charAt","peg$parsenumberSkeletonTokenOption","peg$c36","s6","peg$parseargName","peg$parsepluralRuleSelectValue","peg$parsepatternSyntax","negative","num","peg$parseargNumber","peg$parseescapedChar","peg$parsetagName","parseInt","captureLocation","PLURAL_HASHTAG_REGEX","forEach","matchingLiteralElIndex","literalEl","el_1","newValue","newEls","splice","parse"],"mappings":"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","file":"static/chunks/701e55b9450706e1e000a5c1b3746a90803fda45.4b91948c0aa8fb14b2e0.js","sourcesContent":["import { isArgumentElement, isDateElement, isDateTimeSkeleton, isLiteralElement, isNumberElement, isNumberSkeleton, isPluralElement, isPoundElement, isSelectElement, isTimeElement, isTagElement, } from 'intl-messageformat-parser';\nimport { MissingValueError, InvalidValueError, FormatError, InvalidValueTypeError, } from './error';\nexport var PART_TYPE;\n(function (PART_TYPE) {\n    PART_TYPE[PART_TYPE[\"literal\"] = 0] = \"literal\";\n    PART_TYPE[PART_TYPE[\"object\"] = 1] = \"object\";\n})(PART_TYPE || (PART_TYPE = {}));\nfunction mergeLiteral(parts) {\n    if (parts.length < 2) {\n        return parts;\n    }\n    return parts.reduce(function (all, part) {\n        var lastPart = all[all.length - 1];\n        if (!lastPart ||\n            lastPart.type !== 0 /* literal */ ||\n            part.type !== 0 /* literal */) {\n            all.push(part);\n        }\n        else {\n            lastPart.value += part.value;\n        }\n        return all;\n    }, []);\n}\nexport function isFormatXMLElementFn(el) {\n    return typeof el === 'function';\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, currentPluralValue, \n// For debugging\noriginalMessage) {\n    // Hot path for straight simple msg translations\n    if (els.length === 1 && isLiteralElement(els[0])) {\n        return [\n            {\n                type: 0 /* literal */,\n                value: els[0].value,\n            },\n        ];\n    }\n    var result = [];\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n        var el = els_1[_i];\n        // Exit early for string parts.\n        if (isLiteralElement(el)) {\n            result.push({\n                type: 0 /* literal */,\n                value: el.value,\n            });\n            continue;\n        }\n        // TODO: should this part be literal type?\n        // Replace `#` in plural rules with the actual numeric value.\n        if (isPoundElement(el)) {\n            if (typeof currentPluralValue === 'number') {\n                result.push({\n                    type: 0 /* literal */,\n                    value: formatters.getNumberFormat(locales).format(currentPluralValue),\n                });\n            }\n            continue;\n        }\n        var varName = el.value;\n        // Enforce that all required values are provided by the caller.\n        if (!(values && varName in values)) {\n            throw new MissingValueError(varName, originalMessage);\n        }\n        var value = values[varName];\n        if (isArgumentElement(el)) {\n            if (!value || typeof value === 'string' || typeof value === 'number') {\n                value =\n                    typeof value === 'string' || typeof value === 'number'\n                        ? String(value)\n                        : '';\n            }\n            result.push({\n                type: typeof value === 'string' ? 0 /* literal */ : 1 /* object */,\n                value: value,\n            });\n            continue;\n        }\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.date[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? el.style.parsedOptions\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.time[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? el.style.parsedOptions\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.number[el.style]\n                : isNumberSkeleton(el.style)\n                    ? el.style.parsedOptions\n                    : undefined;\n            if (style && style.scale) {\n                value =\n                    value *\n                        (style.scale || 1);\n            }\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getNumberFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTagElement(el)) {\n            var children = el.children, value_1 = el.value;\n            var formatFn = values[value_1];\n            if (!isFormatXMLElementFn(formatFn)) {\n                throw new InvalidValueTypeError(value_1, 'function', originalMessage);\n            }\n            var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);\n            var chunks = formatFn(parts.map(function (p) { return p.value; }));\n            if (!Array.isArray(chunks)) {\n                chunks = [chunks];\n            }\n            result.push.apply(result, chunks.map(function (c) {\n                return {\n                    type: typeof c === 'string' ? 0 /* literal */ : 1 /* object */,\n                    value: c,\n                };\n            }));\n        }\n        if (isSelectElement(el)) {\n            var opt = el.options[value] || el.options.other;\n            if (!opt) {\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n        if (isPluralElement(el)) {\n            var opt = el.options[\"=\" + value];\n            if (!opt) {\n                if (!Intl.PluralRules) {\n                    throw new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */, originalMessage);\n                }\n                var rule = formatters\n                    .getPluralRules(locales, { type: el.pluralType })\n                    .select(value - (el.offset || 0));\n                opt = el.options[rule] || el.options.other;\n            }\n            if (!opt) {\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\n            continue;\n        }\n    }\n    return mergeLiteral(result);\n}\n","import { __assign, __spreadArrays } from \"tslib\";\nimport { IntlMessageFormat } from 'intl-messageformat';\nimport * as memoize from 'fast-memoize';\nimport { UnsupportedFormatterError } from './error';\nexport function filterProps(props, whitelist, defaults) {\n    if (defaults === void 0) { defaults = {}; }\n    return whitelist.reduce(function (filtered, name) {\n        if (name in props) {\n            filtered[name] = props[name];\n        }\n        else if (name in defaults) {\n            filtered[name] = defaults[name];\n        }\n        return filtered;\n    }, {});\n}\nvar defaultErrorHandler = function (error) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n    }\n};\nexport var DEFAULT_INTL_CONFIG = {\n    formats: {},\n    messages: {},\n    timeZone: undefined,\n    defaultLocale: 'en',\n    defaultFormats: {},\n    onError: defaultErrorHandler,\n};\nexport function createIntlCache() {\n    return {\n        dateTime: {},\n        number: {},\n        message: {},\n        relativeTime: {},\n        pluralRules: {},\n        list: {},\n        displayNames: {},\n    };\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                has: function (key) {\n                    return key in store;\n                },\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\n// @ts-ignore this is to deal with rollup's default import shenanigans\nvar _memoizeIntl = memoize.default || memoize;\nvar memoizeIntl = _memoizeIntl;\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\nexport function createFormatters(cache) {\n    if (cache === void 0) { cache = createIntlCache(); }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    var ListFormat = Intl.ListFormat;\n    var DisplayNames = Intl.DisplayNames;\n    var getDateTimeFormat = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.dateTime),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    var getNumberFormat = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.number),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    var getPluralRules = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.pluralRules),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    return {\n        getDateTimeFormat: getDateTimeFormat,\n        getNumberFormat: getNumberFormat,\n        getMessageFormat: memoizeIntl(function (message, locales, overrideFormats, opts) {\n            return new IntlMessageFormat(message, locales, overrideFormats, __assign({ formatters: {\n                    getNumberFormat: getNumberFormat,\n                    getDateTimeFormat: getDateTimeFormat,\n                    getPluralRules: getPluralRules,\n                } }, (opts || {})));\n        }, {\n            cache: createFastMemoizeCache(cache.message),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getRelativeTimeFormat: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.relativeTime),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getPluralRules: getPluralRules,\n        getListFormat: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (ListFormat.bind.apply(ListFormat, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.list),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getDisplayNames: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (DisplayNames.bind.apply(DisplayNames, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.displayNames),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n    };\n}\nexport function getNamedFormat(formats, type, name, onError) {\n    var formatType = formats && formats[type];\n    var format;\n    if (formatType) {\n        format = formatType[name];\n    }\n    if (format) {\n        return format;\n    }\n    onError(new UnsupportedFormatterError(\"No \" + type + \" format named: \" + name));\n}\n","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics_ from 'hoist-non-react-statics';\n// Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\nvar hoistNonReactStatics = hoistNonReactStatics_.default || hoistNonReactStatics_;\nimport { invariantIntlContext } from '../utils';\nfunction getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n}\n// TODO: We should provide initial value here\nvar IntlContext = React.createContext(null);\nvar IntlConsumer = IntlContext.Consumer, IntlProvider = IntlContext.Provider;\nexport var Provider = IntlProvider;\nexport var Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n    var _a = options || {}, _b = _a.intlPropName, intlPropName = _b === void 0 ? 'intl' : _b, _c = _a.forwardRef, forwardRef = _c === void 0 ? false : _c, _d = _a.enforceContext, enforceContext = _d === void 0 ? true : _d;\n    var WithIntl = function (props) { return (React.createElement(IntlConsumer, null, function (intl) {\n        var _a;\n        if (enforceContext) {\n            invariantIntlContext(intl);\n        }\n        var intlProp = (_a = {}, _a[intlPropName] = intl, _a);\n        return (React.createElement(WrappedComponent, __assign({}, props, intlProp, { ref: forwardRef ? props.forwardedRef : null })));\n    })); };\n    WithIntl.displayName = \"injectIntl(\" + getDisplayName(WrappedComponent) + \")\";\n    WithIntl.WrappedComponent = WrappedComponent;\n    if (forwardRef) {\n        return hoistNonReactStatics(React.forwardRef(function (props, ref) { return (React.createElement(WithIntl, __assign({}, props, { forwardedRef: ref }))); }), WrappedComponent);\n    }\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\n}\n","//\n// Main\n//\n\nfunction memoize (fn, options) {\n  var cache = options && options.cache\n    ? options.cache\n    : cacheDefault\n\n  var serializer = options && options.serializer\n    ? options.serializer\n    : serializerDefault\n\n  var strategy = options && options.strategy\n    ? options.strategy\n    : strategyDefault\n\n  return strategy(fn, {\n    cache: cache,\n    serializer: serializer\n  })\n}\n\n//\n// Strategy\n//\n\nfunction isPrimitive (value) {\n  return value == null || typeof value === 'number' || typeof value === 'boolean' // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\n\nfunction monadic (fn, cache, serializer, arg) {\n  var cacheKey = isPrimitive(arg) ? arg : serializer(arg)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.call(this, arg)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction variadic (fn, cache, serializer) {\n  var args = Array.prototype.slice.call(arguments, 3)\n  var cacheKey = serializer(args)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.apply(this, args)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction assemble (fn, context, strategy, cache, serialize) {\n  return strategy.bind(\n    context,\n    fn,\n    cache,\n    serialize\n  )\n}\n\nfunction strategyDefault (fn, options) {\n  var strategy = fn.length === 1 ? monadic : variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyVariadic (fn, options) {\n  var strategy = variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyMonadic (fn, options) {\n  var strategy = monadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\n//\n// Serializer\n//\n\nfunction serializerDefault () {\n  return JSON.stringify(arguments)\n}\n\n//\n// Cache\n//\n\nfunction ObjectWithoutPrototypeCache () {\n  this.cache = Object.create(null)\n}\n\nObjectWithoutPrototypeCache.prototype.has = function (key) {\n  return (key in this.cache)\n}\n\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n  return this.cache[key]\n}\n\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n  this.cache[key] = value\n}\n\nvar cacheDefault = {\n  create: function create () {\n    return new ObjectWithoutPrototypeCache()\n  }\n}\n\n//\n// API\n//\n\nmodule.exports = memoize\nmodule.exports.strategies = {\n  variadic: strategyVariadic,\n  monadic: strategyMonadic\n}\n","/**\n * Cannot do Math.log(x) / Math.log(10) bc if IEEE floating point issue\n * @param x number\n */\nexport function getMagnitude(x) {\n    // Cannot count string length via Number.toString because it may use scientific notation\n    // for very small or very large numbers.\n    return Math.floor(Math.log(x) * Math.LOG10E);\n}\nexport function repeat(s, times) {\n    if (typeof s.repeat === 'function') {\n        return s.repeat(times);\n    }\n    var arr = new Array(times);\n    for (var i = 0; i < arr.length; i++) {\n        arr[i] = s;\n    }\n    return arr.join('');\n}\nexport function setInternalSlot(map, pl, field, value) {\n    if (!map.get(pl)) {\n        map.set(pl, Object.create(null));\n    }\n    var slots = map.get(pl);\n    slots[field] = value;\n}\nexport function setMultiInternalSlots(map, pl, props) {\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n        var k = _a[_i];\n        setInternalSlot(map, pl, k, props[k]);\n    }\n}\nexport function getInternalSlot(map, pl, field) {\n    return getMultiInternalSlots(map, pl, field)[field];\n}\nexport function getMultiInternalSlots(map, pl) {\n    var fields = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        fields[_i - 2] = arguments[_i];\n    }\n    var slots = map.get(pl);\n    if (!slots) {\n        throw new TypeError(pl + \" InternalSlot has not been initialized\");\n    }\n    return fields.reduce(function (all, f) {\n        all[f] = slots[f];\n        return all;\n    }, Object.create(null));\n}\nexport function isLiteralPart(patternPart) {\n    return patternPart.type === 'literal';\n}\n/*\n  17 ECMAScript Standard Built-in Objects:\n    Every built-in Function object, including constructors, that is not\n    identified as an anonymous function has a name property whose value\n    is a String.\n\n    Unless otherwise specified, the name property of a built-in Function\n    object, if it exists, has the attributes { [[Writable]]: false,\n    [[Enumerable]]: false, [[Configurable]]: true }.\n*/\nexport function defineProperty(target, name, _a) {\n    var value = _a.value;\n    Object.defineProperty(target, name, {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: value,\n    });\n}\nexport var UNICODE_EXTENSION_SEQUENCE_REGEX = /-u(?:-[0-9a-z]{2,8})+/gi;\nexport function invariant(condition, message, Err) {\n    if (Err === void 0) { Err = Error; }\n    if (!condition) {\n        throw new Err(message);\n    }\n}\n","import { __extends } from \"tslib\";\nexport var ErrorCode;\n(function (ErrorCode) {\n    // When we have a placeholder but no value to format\n    ErrorCode[\"MISSING_VALUE\"] = \"MISSING_VALUE\";\n    // When value supplied is invalid\n    ErrorCode[\"INVALID_VALUE\"] = \"INVALID_VALUE\";\n    // When we need specific Intl API but it's not available\n    ErrorCode[\"MISSING_INTL_API\"] = \"MISSING_INTL_API\";\n})(ErrorCode || (ErrorCode = {}));\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, code, originalMessage) {\n        var _this = _super.call(this, msg) || this;\n        _this.code = code;\n        _this.originalMessage = originalMessage;\n        return _this;\n    }\n    FormatError.prototype.toString = function () {\n        return \"[formatjs Error: \" + this.code + \"] \" + this.message;\n    };\n    return FormatError;\n}(Error));\nexport { FormatError };\nvar InvalidValueError = /** @class */ (function (_super) {\n    __extends(InvalidValueError, _super);\n    function InvalidValueError(variableId, value, options, originalMessage) {\n        return _super.call(this, \"Invalid values for \\\"\" + variableId + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(options).join('\", \"') + \"\\\"\", \"INVALID_VALUE\" /* INVALID_VALUE */, originalMessage) || this;\n    }\n    return InvalidValueError;\n}(FormatError));\nexport { InvalidValueError };\nvar InvalidValueTypeError = /** @class */ (function (_super) {\n    __extends(InvalidValueTypeError, _super);\n    function InvalidValueTypeError(value, type, originalMessage) {\n        return _super.call(this, \"Value for \\\"\" + value + \"\\\" must be of type \" + type, \"INVALID_VALUE\" /* INVALID_VALUE */, originalMessage) || this;\n    }\n    return InvalidValueTypeError;\n}(FormatError));\nexport { InvalidValueTypeError };\nvar MissingValueError = /** @class */ (function (_super) {\n    __extends(MissingValueError, _super);\n    function MissingValueError(variableId, originalMessage) {\n        return _super.call(this, \"The intl string context variable \\\"\" + variableId + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\", \"MISSING_VALUE\" /* MISSING_VALUE */, originalMessage) || this;\n    }\n    return MissingValueError;\n}(FormatError));\nexport { MissingValueError };\n","import { __extends } from \"tslib\";\nexport var IntlErrorCode;\n(function (IntlErrorCode) {\n    IntlErrorCode[\"FORMAT_ERROR\"] = \"FORMAT_ERROR\";\n    IntlErrorCode[\"UNSUPPORTED_FORMATTER\"] = \"UNSUPPORTED_FORMATTER\";\n    IntlErrorCode[\"INVALID_CONFIG\"] = \"INVALID_CONFIG\";\n    IntlErrorCode[\"MISSING_DATA\"] = \"MISSING_DATA\";\n    IntlErrorCode[\"MISSING_TRANSLATION\"] = \"MISSING_TRANSLATION\";\n})(IntlErrorCode || (IntlErrorCode = {}));\nvar IntlError = /** @class */ (function (_super) {\n    __extends(IntlError, _super);\n    function IntlError(code, message, exception) {\n        var _this = _super.call(this, \"[@formatjs/intl Error \" + code + \"] \" + message + \" \\n\" + (exception ? \"\\n\" + exception.message + \"\\n\" + exception.stack : '')) || this;\n        _this.code = code;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, IntlError);\n        }\n        return _this;\n    }\n    return IntlError;\n}(Error));\nexport { IntlError };\nvar UnsupportedFormatterError = /** @class */ (function (_super) {\n    __extends(UnsupportedFormatterError, _super);\n    function UnsupportedFormatterError(message, exception) {\n        return _super.call(this, \"UNSUPPORTED_FORMATTER\" /* UNSUPPORTED_FORMATTER */, message, exception) || this;\n    }\n    return UnsupportedFormatterError;\n}(IntlError));\nexport { UnsupportedFormatterError };\nvar InvalidConfigError = /** @class */ (function (_super) {\n    __extends(InvalidConfigError, _super);\n    function InvalidConfigError(message, exception) {\n        return _super.call(this, \"INVALID_CONFIG\" /* INVALID_CONFIG */, message, exception) || this;\n    }\n    return InvalidConfigError;\n}(IntlError));\nexport { InvalidConfigError };\nvar MissingDataError = /** @class */ (function (_super) {\n    __extends(MissingDataError, _super);\n    function MissingDataError(message, exception) {\n        return _super.call(this, \"MISSING_DATA\" /* MISSING_DATA */, message, exception) || this;\n    }\n    return MissingDataError;\n}(IntlError));\nexport { MissingDataError };\nvar MessageFormatError = /** @class */ (function (_super) {\n    __extends(MessageFormatError, _super);\n    function MessageFormatError(message, locale, descriptor, exception) {\n        var _this = _super.call(this, \"FORMAT_ERROR\" /* FORMAT_ERROR */, message + \" \\nLocale: \" + locale + \"\\nMessageID: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.id) + \"\\nDefault Message: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.defaultMessage) + \"\\nDescription: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.description) + \" \\n\", exception) || this;\n        _this.descriptor = descriptor;\n        return _this;\n    }\n    return MessageFormatError;\n}(IntlError));\nexport { MessageFormatError };\nvar MissingTranslationError = /** @class */ (function (_super) {\n    __extends(MissingTranslationError, _super);\n    function MissingTranslationError(descriptor, locale) {\n        var _this = _super.call(this, \"MISSING_TRANSLATION\" /* MISSING_TRANSLATION */, \"Missing message: \\\"\" + descriptor.id + \"\\\" for locale \\\"\" + locale + \"\\\", using \" + (descriptor.defaultMessage ? 'default message' : 'id') + \" as fallback.\") || this;\n        _this.descriptor = descriptor;\n        return _this;\n    }\n    return MissingTranslationError;\n}(IntlError));\nexport { MissingTranslationError };\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nimport { __assign, __spreadArrays } from \"tslib\";\nimport { parse } from 'intl-messageformat-parser';\nimport * as memoize from 'fast-memoize';\nimport { formatToParts, } from './formatters';\n// -- MessageFormat --------------------------------------------------------\nfunction mergeConfig(c1, c2) {\n    if (!c2) {\n        return c1;\n    }\n    return __assign(__assign(__assign({}, (c1 || {})), (c2 || {})), Object.keys(c1).reduce(function (all, k) {\n        all[k] = __assign(__assign({}, c1[k]), (c2[k] || {}));\n        return all;\n    }, {}));\n}\nfunction mergeConfigs(defaultConfig, configs) {\n    if (!configs) {\n        return defaultConfig;\n    }\n    return Object.keys(defaultConfig).reduce(function (all, k) {\n        all[k] = mergeConfig(defaultConfig[k], configs[k]);\n        return all;\n    }, __assign({}, defaultConfig));\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                has: function (key) {\n                    return key in store;\n                },\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\n// @ts-ignore this is to deal with rollup's default import shenanigans\nvar _memoizeIntl = memoize.default || memoize;\nvar memoizeIntl = _memoizeIntl;\nfunction createDefaultFormatters(cache) {\n    if (cache === void 0) { cache = {\n        number: {},\n        dateTime: {},\n        pluralRules: {},\n    }; }\n    return {\n        getNumberFormat: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.number),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getDateTimeFormat: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.dateTime),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getPluralRules: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.pluralRules),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n    };\n}\nvar IntlMessageFormat = /** @class */ (function () {\n    function IntlMessageFormat(message, locales, overrideFormats, opts) {\n        var _this = this;\n        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }\n        this.formatterCache = {\n            number: {},\n            dateTime: {},\n            pluralRules: {},\n        };\n        this.format = function (values) {\n            var parts = _this.formatToParts(values);\n            // Hot path for straight simple msg translations\n            if (parts.length === 1) {\n                return parts[0].value;\n            }\n            var result = parts.reduce(function (all, part) {\n                if (!all.length ||\n                    part.type !== 0 /* literal */ ||\n                    typeof all[all.length - 1] !== 'string') {\n                    all.push(part.value);\n                }\n                else {\n                    all[all.length - 1] += part.value;\n                }\n                return all;\n            }, []);\n            if (result.length <= 1) {\n                return result[0] || '';\n            }\n            return result;\n        };\n        this.formatToParts = function (values) {\n            return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, undefined, _this.message);\n        };\n        this.resolvedOptions = function () { return ({\n            locale: Intl.NumberFormat.supportedLocalesOf(_this.locales)[0],\n        }); };\n        this.getAst = function () { return _this.ast; };\n        if (typeof message === 'string') {\n            this.message = message;\n            if (!IntlMessageFormat.__parse) {\n                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');\n            }\n            // Parse string messages into an AST.\n            this.ast = IntlMessageFormat.__parse(message, {\n                normalizeHashtagInPlural: false,\n                ignoreTag: opts === null || opts === void 0 ? void 0 : opts.ignoreTag,\n            });\n        }\n        else {\n            this.ast = message;\n        }\n        if (!Array.isArray(this.ast)) {\n            throw new TypeError('A message must be provided as a String or AST.');\n        }\n        // Creates a new object with the specified `formats` merged with the default\n        // formats.\n        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\n        // Defined first because it's used to build the format pattern.\n        this.locales = locales;\n        this.formatters =\n            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);\n    }\n    Object.defineProperty(IntlMessageFormat, \"defaultLocale\", {\n        get: function () {\n            if (!IntlMessageFormat.memoizedDefaultLocale) {\n                IntlMessageFormat.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale;\n            }\n            return IntlMessageFormat.memoizedDefaultLocale;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IntlMessageFormat.memoizedDefaultLocale = null;\n    IntlMessageFormat.__parse = parse;\n    // Default format options used as the prototype of the `formats` provided to the\n    // constructor. These are used when constructing the internal Intl.NumberFormat\n    // and Intl.DateTimeFormat instances.\n    IntlMessageFormat.formats = {\n        number: {\n            currency: {\n                style: 'currency',\n            },\n            percent: {\n                style: 'percent',\n            },\n        },\n        date: {\n            short: {\n                month: 'numeric',\n                day: 'numeric',\n                year: '2-digit',\n            },\n            medium: {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            long: {\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            full: {\n                weekday: 'long',\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n        },\n        time: {\n            short: {\n                hour: 'numeric',\n                minute: 'numeric',\n            },\n            medium: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n            },\n            long: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n            full: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n        },\n    };\n    return IntlMessageFormat;\n}());\nexport { IntlMessageFormat };\n","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { invariant } from '@formatjs/ecma402-abstract';\nimport { DEFAULT_INTL_CONFIG as CORE_DEFAULT_INTL_CONFIG } from '@formatjs/intl';\nexport function invariantIntlContext(intl) {\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\n        '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport var DEFAULT_INTL_CONFIG = __assign(__assign({}, CORE_DEFAULT_INTL_CONFIG), { textComponent: React.Fragment });\n/**\n * Takes a `formatXMLElementFn`, and composes it in function, which passes\n * argument `parts` through, assigning unique key to each part, to prevent\n * \"Each child in a list should have a unique \"key\"\" React error.\n * @param formatXMLElementFn\n */\nexport function assignUniqueKeysToParts(formatXMLElementFn) {\n    return function (parts) {\n        // eslint-disable-next-line prefer-rest-params\n        return formatXMLElementFn(React.Children.toArray(parts));\n    };\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export var TYPE;\n(function (TYPE) {\n    /**\n     * Raw text\n     */\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n    /**\n     * Variable w/o any format, e.g `var` in `this is a {var}`\n     */\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n    /**\n     * Variable w/ number format\n     */\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\n    /**\n     * Variable w/ date format\n     */\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\n    /**\n     * Variable w/ time format\n     */\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\n    /**\n     * Variable w/ select format\n     */\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\n    /**\n     * Variable w/ plural format\n     */\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n    /**\n     * Only possible within plural argument.\n     * This is the `#` symbol that will be substituted with the count.\n     */\n    TYPE[TYPE[\"pound\"] = 7] = \"pound\";\n    /**\n     * XML-like tag\n     */\n    TYPE[TYPE[\"tag\"] = 8] = \"tag\";\n})(TYPE || (TYPE = {}));\nexport var SKELETON_TYPE;\n(function (SKELETON_TYPE) {\n    SKELETON_TYPE[SKELETON_TYPE[\"number\"] = 0] = \"number\";\n    SKELETON_TYPE[SKELETON_TYPE[\"dateTime\"] = 1] = \"dateTime\";\n})(SKELETON_TYPE || (SKELETON_TYPE = {}));\n/**\n * Type Guards\n */\nexport function isLiteralElement(el) {\n    return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n    return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n    return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n    return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n    return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n    return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n    return el.type === TYPE.plural;\n}\nexport function isPoundElement(el) {\n    return el.type === TYPE.pound;\n}\nexport function isTagElement(el) {\n    return el.type === TYPE.tag;\n}\nexport function isNumberSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 0 /* number */);\n}\nexport function isDateTimeSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 1 /* dateTime */);\n}\nexport function createLiteralElement(value) {\n    return {\n        type: TYPE.literal,\n        value: value,\n    };\n}\nexport function createNumberElement(value, style) {\n    return {\n        type: TYPE.number,\n        value: value,\n        style: style,\n    };\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { __assign } from \"tslib\";\n/**\n * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js\n * with some tweaks\n */\nvar DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\n/**\n * Parse Date time skeleton into Intl.DateTimeFormatOptions\n * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * @public\n * @param skeleton skeleton string\n */\nexport function parseDateTimeSkeleton(skeleton) {\n    var result = {};\n    skeleton.replace(DATE_TIME_REGEX, function (match) {\n        var len = match.length;\n        switch (match[0]) {\n            // Era\n            case 'G':\n                result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n                break;\n            // Year\n            case 'y':\n                result.year = len === 2 ? '2-digit' : 'numeric';\n                break;\n            case 'Y':\n            case 'u':\n            case 'U':\n            case 'r':\n                throw new RangeError('`Y/u/U/r` (year) patterns are not supported, use `y` instead');\n            // Quarter\n            case 'q':\n            case 'Q':\n                throw new RangeError('`q/Q` (quarter) patterns are not supported');\n            // Month\n            case 'M':\n            case 'L':\n                result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];\n                break;\n            // Week\n            case 'w':\n            case 'W':\n                throw new RangeError('`w/W` (week) patterns are not supported');\n            case 'd':\n                result.day = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'D':\n            case 'F':\n            case 'g':\n                throw new RangeError('`D/F/g` (day) patterns are not supported, use `d` instead');\n            // Weekday\n            case 'E':\n                result.weekday = len === 4 ? 'short' : len === 5 ? 'narrow' : 'short';\n                break;\n            case 'e':\n                if (len < 4) {\n                    throw new RangeError('`e..eee` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            case 'c':\n                if (len < 4) {\n                    throw new RangeError('`c..ccc` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            // Period\n            case 'a': // AM, PM\n                result.hour12 = true;\n                break;\n            case 'b': // am, pm, noon, midnight\n            case 'B': // flexible day periods\n                throw new RangeError('`b/B` (period) patterns are not supported, use `a` instead');\n            // Hour\n            case 'h':\n                result.hourCycle = 'h12';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'H':\n                result.hourCycle = 'h23';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'K':\n                result.hourCycle = 'h11';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'k':\n                result.hourCycle = 'h24';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'j':\n            case 'J':\n            case 'C':\n                throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');\n            // Minute\n            case 'm':\n                result.minute = ['numeric', '2-digit'][len - 1];\n                break;\n            // Second\n            case 's':\n                result.second = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'S':\n            case 'A':\n                throw new RangeError('`S/A` (second) patterns are not supported, use `s` instead');\n            // Zone\n            case 'z': // 1..3, 4: specific non-location format\n                result.timeZoneName = len < 4 ? 'short' : 'long';\n                break;\n            case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\n            case 'O': // 1, 4: miliseconds in day short, long\n            case 'v': // 1, 4: generic non-location format\n            case 'V': // 1, 2, 3, 4: time zone ID or city\n            case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\n            case 'x': // 1, 2, 3, 4: The ISO8601 varios formats\n                throw new RangeError('`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead');\n        }\n        return '';\n    });\n    return result;\n}\nfunction icuUnitToEcma(unit) {\n    return unit.replace(/^(.*?)-/, '');\n}\nvar FRACTION_PRECISION_REGEX = /^\\.(?:(0+)(\\*)?|(#+)|(0+)(#+))$/g;\nvar SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\\+|#+)?$/g;\nfunction parseSignificantPrecision(str) {\n    var result = {};\n    str.replace(SIGNIFICANT_PRECISION_REGEX, function (_, g1, g2) {\n        // @@@ case\n        if (typeof g2 !== 'string') {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits = g1.length;\n        }\n        // @@@+ case\n        else if (g2 === '+') {\n            result.minimumSignificantDigits = g1.length;\n        }\n        // .### case\n        else if (g1[0] === '#') {\n            result.maximumSignificantDigits = g1.length;\n        }\n        // .@@## or .@@@ case\n        else {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits =\n                g1.length + (typeof g2 === 'string' ? g2.length : 0);\n        }\n        return '';\n    });\n    return result;\n}\nfunction parseSign(str) {\n    switch (str) {\n        case 'sign-auto':\n            return {\n                signDisplay: 'auto',\n            };\n        case 'sign-accounting':\n            return {\n                currencySign: 'accounting',\n            };\n        case 'sign-always':\n            return {\n                signDisplay: 'always',\n            };\n        case 'sign-accounting-always':\n            return {\n                signDisplay: 'always',\n                currencySign: 'accounting',\n            };\n        case 'sign-except-zero':\n            return {\n                signDisplay: 'exceptZero',\n            };\n        case 'sign-accounting-except-zero':\n            return {\n                signDisplay: 'exceptZero',\n                currencySign: 'accounting',\n            };\n        case 'sign-never':\n            return {\n                signDisplay: 'never',\n            };\n    }\n}\nfunction parseNotationOptions(opt) {\n    var result = {};\n    var signOpts = parseSign(opt);\n    if (signOpts) {\n        return signOpts;\n    }\n    return result;\n}\n/**\n * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#skeleton-stems-and-options\n */\nexport function parseNumberSkeleton(tokens) {\n    var result = {};\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        switch (token.stem) {\n            case 'percent':\n                result.style = 'percent';\n                continue;\n            case 'currency':\n                result.style = 'currency';\n                result.currency = token.options[0];\n                continue;\n            case 'group-off':\n                result.useGrouping = false;\n                continue;\n            case 'precision-integer':\n            case '.':\n                result.maximumFractionDigits = 0;\n                continue;\n            case 'measure-unit':\n                result.style = 'unit';\n                result.unit = icuUnitToEcma(token.options[0]);\n                continue;\n            case 'compact-short':\n                result.notation = 'compact';\n                result.compactDisplay = 'short';\n                continue;\n            case 'compact-long':\n                result.notation = 'compact';\n                result.compactDisplay = 'long';\n                continue;\n            case 'scientific':\n                result = __assign(__assign(__assign({}, result), { notation: 'scientific' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'engineering':\n                result = __assign(__assign(__assign({}, result), { notation: 'engineering' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'notation-simple':\n                result.notation = 'standard';\n                continue;\n            // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h\n            case 'unit-width-narrow':\n                result.currencyDisplay = 'narrowSymbol';\n                result.unitDisplay = 'narrow';\n                continue;\n            case 'unit-width-short':\n                result.currencyDisplay = 'code';\n                result.unitDisplay = 'short';\n                continue;\n            case 'unit-width-full-name':\n                result.currencyDisplay = 'name';\n                result.unitDisplay = 'long';\n                continue;\n            case 'unit-width-iso-code':\n                result.currencyDisplay = 'symbol';\n                continue;\n            case 'scale':\n                result.scale = parseFloat(token.options[0]);\n                continue;\n        }\n        // Precision\n        // https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#fraction-precision\n        // precision-integer case\n        if (FRACTION_PRECISION_REGEX.test(token.stem)) {\n            if (token.options.length > 1) {\n                throw new RangeError('Fraction-precision stems only accept a single optional option');\n            }\n            token.stem.replace(FRACTION_PRECISION_REGEX, function (_, g1, g2, g3, g4, g5) {\n                // .000* case (before ICU67 it was .000+)\n                if (g2 === '*') {\n                    result.minimumFractionDigits = g1.length;\n                }\n                // .### case\n                else if (g3 && g3[0] === '#') {\n                    result.maximumFractionDigits = g3.length;\n                }\n                // .00## case\n                else if (g4 && g5) {\n                    result.minimumFractionDigits = g4.length;\n                    result.maximumFractionDigits = g4.length + g5.length;\n                }\n                else {\n                    result.minimumFractionDigits = g1.length;\n                    result.maximumFractionDigits = g1.length;\n                }\n                return '';\n            });\n            if (token.options.length) {\n                result = __assign(__assign({}, result), parseSignificantPrecision(token.options[0]));\n            }\n            continue;\n        }\n        if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {\n            result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));\n            continue;\n        }\n        var signOpts = parseSign(token.stem);\n        if (signOpts) {\n            result = __assign(__assign({}, result), signOpts);\n        }\n    }\n    return result;\n}\n","// @ts-nocheck\nimport { __assign, __extends } from \"tslib\";\n// @generated\nimport { TYPE, } from './types';\nimport { parseDateTimeSkeleton, parseNumberSkeleton } from './skeleton';\nvar SyntaxError = /** @class */ (function (_super) {\n    __extends(SyntaxError, _super);\n    function SyntaxError(message, expected, found, location) {\n        var _this = _super.call(this) || this;\n        _this.message = message;\n        _this.expected = expected;\n        _this.found = found;\n        _this.location = location;\n        _this.name = \"SyntaxError\";\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(_this, SyntaxError);\n        }\n        return _this;\n    }\n    SyntaxError.buildMessage = function (expected, found) {\n        function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        }\n        function literalEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\"/g, \"\\\\\\\"\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function classEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\\]/g, \"\\\\]\")\n                .replace(/\\^/g, \"\\\\^\")\n                .replace(/-/g, \"\\\\-\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function describeExpectation(expectation) {\n            switch (expectation.type) {\n                case \"literal\":\n                    return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n                case \"class\":\n                    var escapedParts = expectation.parts.map(function (part) {\n                        return Array.isArray(part)\n                            ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n                            : classEscape(part);\n                    });\n                    return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n                case \"any\":\n                    return \"any character\";\n                case \"end\":\n                    return \"end of input\";\n                case \"other\":\n                    return expectation.description;\n            }\n        }\n        function describeExpected(expected1) {\n            var descriptions = expected1.map(describeExpectation);\n            var i;\n            var j;\n            descriptions.sort();\n            if (descriptions.length > 0) {\n                for (i = 1, j = 1; i < descriptions.length; i++) {\n                    if (descriptions[i - 1] !== descriptions[i]) {\n                        descriptions[j] = descriptions[i];\n                        j++;\n                    }\n                }\n                descriptions.length = j;\n            }\n            switch (descriptions.length) {\n                case 1:\n                    return descriptions[0];\n                case 2:\n                    return descriptions[0] + \" or \" + descriptions[1];\n                default:\n                    return descriptions.slice(0, -1).join(\", \")\n                        + \", or \"\n                        + descriptions[descriptions.length - 1];\n            }\n        }\n        function describeFound(found1) {\n            return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\n        }\n        return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n    };\n    return SyntaxError;\n}(Error));\nexport { SyntaxError };\nfunction peg$parse(input, options) {\n    options = options !== undefined ? options : {};\n    var peg$FAILED = {};\n    var peg$startRuleFunctions = { start: peg$parsestart };\n    var peg$startRuleFunction = peg$parsestart;\n    var peg$c0 = function () { return !ignoreTag; };\n    var peg$c1 = function (x) { return x; };\n    var peg$c2 = function () { return ignoreTag; };\n    var peg$c3 = \"<\";\n    var peg$c4 = peg$literalExpectation(\"<\", false);\n    var peg$c5 = function (parts) {\n        return parts.join('');\n    };\n    var peg$c6 = function () { return '<'; };\n    var peg$c7 = function (messageText) {\n        return __assign({ type: TYPE.literal, value: messageText }, insertLocation());\n    };\n    var peg$c8 = \"#\";\n    var peg$c9 = peg$literalExpectation(\"#\", false);\n    var peg$c10 = function () {\n        return __assign({ type: TYPE.pound }, insertLocation());\n    };\n    var peg$c11 = peg$otherExpectation(\"tagElement\");\n    var peg$c12 = function (open, children, close) {\n        if (open !== close) {\n            error(\"Mismatch tag \\\"\" + open + \"\\\" !== \\\"\" + close + \"\\\"\", location());\n        }\n        return __assign({ type: TYPE.tag, value: open, children: children }, insertLocation());\n    };\n    var peg$c13 = \"/>\";\n    var peg$c14 = peg$literalExpectation(\"/>\", false);\n    var peg$c15 = function (value) {\n        return __assign({ type: TYPE.literal, value: value.join('') }, insertLocation());\n    };\n    var peg$c16 = \">\";\n    var peg$c17 = peg$literalExpectation(\">\", false);\n    var peg$c18 = function (tag) { return tag; };\n    var peg$c19 = \"</\";\n    var peg$c20 = peg$literalExpectation(\"</\", false);\n    var peg$c21 = peg$otherExpectation(\"argumentElement\");\n    var peg$c22 = \"{\";\n    var peg$c23 = peg$literalExpectation(\"{\", false);\n    var peg$c24 = \"}\";\n    var peg$c25 = peg$literalExpectation(\"}\", false);\n    var peg$c26 = function (value) {\n        return __assign({ type: TYPE.argument, value: value }, insertLocation());\n    };\n    var peg$c27 = peg$otherExpectation(\"numberSkeletonId\");\n    var peg$c28 = /^['\\/{}]/;\n    var peg$c29 = peg$classExpectation([\"'\", \"/\", \"{\", \"}\"], false, false);\n    var peg$c30 = peg$anyExpectation();\n    var peg$c31 = peg$otherExpectation(\"numberSkeletonTokenOption\");\n    var peg$c32 = \"/\";\n    var peg$c33 = peg$literalExpectation(\"/\", false);\n    var peg$c34 = function (option) { return option; };\n    var peg$c35 = peg$otherExpectation(\"numberSkeletonToken\");\n    var peg$c36 = function (stem, options) {\n        return { stem: stem, options: options };\n    };\n    var peg$c37 = function (tokens) {\n        return __assign({ type: 0 /* number */, tokens: tokens, parsedOptions: shouldParseSkeleton ? parseNumberSkeleton(tokens) : {} }, insertLocation());\n    };\n    var peg$c38 = \"::\";\n    var peg$c39 = peg$literalExpectation(\"::\", false);\n    var peg$c40 = function (skeleton) { return skeleton; };\n    var peg$c41 = function () { messageCtx.push('numberArgStyle'); return true; };\n    var peg$c42 = function (style) {\n        messageCtx.pop();\n        return style.replace(/\\s*$/, '');\n    };\n    var peg$c43 = \",\";\n    var peg$c44 = peg$literalExpectation(\",\", false);\n    var peg$c45 = \"number\";\n    var peg$c46 = peg$literalExpectation(\"number\", false);\n    var peg$c47 = function (value, type, style) {\n        return __assign({ type: type === 'number' ? TYPE.number : type === 'date' ? TYPE.date : TYPE.time, style: style && style[2], value: value }, insertLocation());\n    };\n    var peg$c48 = \"'\";\n    var peg$c49 = peg$literalExpectation(\"'\", false);\n    var peg$c50 = /^[^']/;\n    var peg$c51 = peg$classExpectation([\"'\"], true, false);\n    var peg$c52 = /^[^a-zA-Z'{}]/;\n    var peg$c53 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"'\", \"{\", \"}\"], true, false);\n    var peg$c54 = /^[a-zA-Z]/;\n    var peg$c55 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false);\n    var peg$c56 = function (pattern) {\n        return __assign({ type: 1 /* dateTime */, pattern: pattern, parsedOptions: shouldParseSkeleton ? parseDateTimeSkeleton(pattern) : {} }, insertLocation());\n    };\n    var peg$c57 = function () { messageCtx.push('dateOrTimeArgStyle'); return true; };\n    var peg$c58 = \"date\";\n    var peg$c59 = peg$literalExpectation(\"date\", false);\n    var peg$c60 = \"time\";\n    var peg$c61 = peg$literalExpectation(\"time\", false);\n    var peg$c62 = \"plural\";\n    var peg$c63 = peg$literalExpectation(\"plural\", false);\n    var peg$c64 = \"selectordinal\";\n    var peg$c65 = peg$literalExpectation(\"selectordinal\", false);\n    var peg$c66 = \"offset:\";\n    var peg$c67 = peg$literalExpectation(\"offset:\", false);\n    var peg$c68 = function (value, pluralType, offset, options) {\n        return __assign({ type: TYPE.plural, pluralType: pluralType === 'plural' ? 'cardinal' : 'ordinal', value: value, offset: offset ? offset[2] : 0, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in plural element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c69 = \"select\";\n    var peg$c70 = peg$literalExpectation(\"select\", false);\n    var peg$c71 = function (value, options) {\n        return __assign({ type: TYPE.select, value: value, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in select element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c72 = \"=\";\n    var peg$c73 = peg$literalExpectation(\"=\", false);\n    var peg$c74 = function (id) { messageCtx.push('select'); return true; };\n    var peg$c75 = function (id, value) {\n        messageCtx.pop();\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c76 = function (id) { messageCtx.push('plural'); return true; };\n    var peg$c77 = function (id, value) {\n        messageCtx.pop();\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c78 = peg$otherExpectation(\"whitespace\");\n    var peg$c79 = /^[\\t-\\r \\x85\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;\n    var peg$c80 = peg$classExpectation([[\"\\t\", \"\\r\"], \" \", \"\\x85\", \"\\xA0\", \"\\u1680\", [\"\\u2000\", \"\\u200A\"], \"\\u2028\", \"\\u2029\", \"\\u202F\", \"\\u205F\", \"\\u3000\"], false, false);\n    var peg$c81 = peg$otherExpectation(\"syntax pattern\");\n    var peg$c82 = /^[!-\\/:-@[-\\^`{-~\\xA1-\\xA7\\xA9\\xAB\\xAC\\xAE\\xB0\\xB1\\xB6\\xBB\\xBF\\xD7\\xF7\\u2010-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u245F\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3020\\u3030\\uFD3E\\uFD3F\\uFE45\\uFE46]/;\n    var peg$c83 = peg$classExpectation([[\"!\", \"/\"], [\":\", \"@\"], [\"[\", \"^\"], \"`\", [\"{\", \"~\"], [\"\\xA1\", \"\\xA7\"], \"\\xA9\", \"\\xAB\", \"\\xAC\", \"\\xAE\", \"\\xB0\", \"\\xB1\", \"\\xB6\", \"\\xBB\", \"\\xBF\", \"\\xD7\", \"\\xF7\", [\"\\u2010\", \"\\u2027\"], [\"\\u2030\", \"\\u203E\"], [\"\\u2041\", \"\\u2053\"], [\"\\u2055\", \"\\u205E\"], [\"\\u2190\", \"\\u245F\"], [\"\\u2500\", \"\\u2775\"], [\"\\u2794\", \"\\u2BFF\"], [\"\\u2E00\", \"\\u2E7F\"], [\"\\u3001\", \"\\u3003\"], [\"\\u3008\", \"\\u3020\"], \"\\u3030\", \"\\uFD3E\", \"\\uFD3F\", \"\\uFE45\", \"\\uFE46\"], false, false);\n    var peg$c84 = peg$otherExpectation(\"optional whitespace\");\n    var peg$c85 = peg$otherExpectation(\"number\");\n    var peg$c86 = \"-\";\n    var peg$c87 = peg$literalExpectation(\"-\", false);\n    var peg$c88 = function (negative, num) {\n        return num\n            ? negative\n                ? -num\n                : num\n            : 0;\n    };\n    var peg$c89 = peg$otherExpectation(\"apostrophe\");\n    var peg$c90 = peg$otherExpectation(\"double apostrophes\");\n    var peg$c91 = \"''\";\n    var peg$c92 = peg$literalExpectation(\"''\", false);\n    var peg$c93 = function () { return \"'\"; };\n    var peg$c94 = function (escapedChar, quotedChars) {\n        return escapedChar + quotedChars.replace(\"''\", \"'\");\n    };\n    var peg$c95 = function (x) {\n        return (x !== '<' &&\n            x !== '{' &&\n            !(isInPluralOption() && x === '#') &&\n            !(isNestedMessageText() && x === '}'));\n    };\n    var peg$c96 = \"\\n\";\n    var peg$c97 = peg$literalExpectation(\"\\n\", false);\n    var peg$c98 = function (x) {\n        return x === '<' || x === '>' || x === '{' || x === '}' || (isInPluralOption() && x === '#');\n    };\n    var peg$c99 = peg$otherExpectation(\"argNameOrNumber\");\n    var peg$c100 = peg$otherExpectation(\"validTag\");\n    var peg$c101 = peg$otherExpectation(\"argNumber\");\n    var peg$c102 = \"0\";\n    var peg$c103 = peg$literalExpectation(\"0\", false);\n    var peg$c104 = function () { return 0; };\n    var peg$c105 = /^[1-9]/;\n    var peg$c106 = peg$classExpectation([[\"1\", \"9\"]], false, false);\n    var peg$c107 = /^[0-9]/;\n    var peg$c108 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n    var peg$c109 = function (digits) {\n        return parseInt(digits.join(''), 10);\n    };\n    var peg$c110 = peg$otherExpectation(\"argName\");\n    var peg$c111 = peg$otherExpectation(\"tagName\");\n    var peg$currPos = 0;\n    var peg$savedPos = 0;\n    var peg$posDetailsCache = [{ line: 1, column: 1 }];\n    var peg$maxFailPos = 0;\n    var peg$maxFailExpected = [];\n    var peg$silentFails = 0;\n    var peg$result;\n    if (options.startRule !== undefined) {\n        if (!(options.startRule in peg$startRuleFunctions)) {\n            throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n        }\n        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n    function text() {\n        return input.substring(peg$savedPos, peg$currPos);\n    }\n    function location() {\n        return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n    function expected(description, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location1);\n    }\n    function error(message, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildSimpleError(message, location1);\n    }\n    function peg$literalExpectation(text1, ignoreCase) {\n        return { type: \"literal\", text: text1, ignoreCase: ignoreCase };\n    }\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n        return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n    function peg$anyExpectation() {\n        return { type: \"any\" };\n    }\n    function peg$endExpectation() {\n        return { type: \"end\" };\n    }\n    function peg$otherExpectation(description) {\n        return { type: \"other\", description: description };\n    }\n    function peg$computePosDetails(pos) {\n        var details = peg$posDetailsCache[pos];\n        var p;\n        if (details) {\n            return details;\n        }\n        else {\n            p = pos - 1;\n            while (!peg$posDetailsCache[p]) {\n                p--;\n            }\n            details = peg$posDetailsCache[p];\n            details = {\n                line: details.line,\n                column: details.column\n            };\n            while (p < pos) {\n                if (input.charCodeAt(p) === 10) {\n                    details.line++;\n                    details.column = 1;\n                }\n                else {\n                    details.column++;\n                }\n                p++;\n            }\n            peg$posDetailsCache[pos] = details;\n            return details;\n        }\n    }\n    function peg$computeLocation(startPos, endPos) {\n        var startPosDetails = peg$computePosDetails(startPos);\n        var endPosDetails = peg$computePosDetails(endPos);\n        return {\n            start: {\n                offset: startPos,\n                line: startPosDetails.line,\n                column: startPosDetails.column\n            },\n            end: {\n                offset: endPos,\n                line: endPosDetails.line,\n                column: endPosDetails.column\n            }\n        };\n    }\n    function peg$fail(expected1) {\n        if (peg$currPos < peg$maxFailPos) {\n            return;\n        }\n        if (peg$currPos > peg$maxFailPos) {\n            peg$maxFailPos = peg$currPos;\n            peg$maxFailExpected = [];\n        }\n        peg$maxFailExpected.push(expected1);\n    }\n    function peg$buildSimpleError(message, location1) {\n        return new SyntaxError(message, [], \"\", location1);\n    }\n    function peg$buildStructuredError(expected1, found, location1) {\n        return new SyntaxError(SyntaxError.buildMessage(expected1, found), expected1, found, location1);\n    }\n    function peg$parsestart() {\n        var s0;\n        s0 = peg$parsemessage();\n        return s0;\n    }\n    function peg$parsemessage() {\n        var s0, s1;\n        s0 = [];\n        s1 = peg$parsemessageElement();\n        while (s1 !== peg$FAILED) {\n            s0.push(s1);\n            s1 = peg$parsemessageElement();\n        }\n        return s0;\n    }\n    function peg$parsemessageElement() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        peg$savedPos = peg$currPos;\n        s1 = peg$c0();\n        if (s1) {\n            s1 = undefined;\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsetagElement();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c1(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseliteralElement();\n            if (s0 === peg$FAILED) {\n                s0 = peg$parseargumentElement();\n                if (s0 === peg$FAILED) {\n                    s0 = peg$parsesimpleFormatElement();\n                    if (s0 === peg$FAILED) {\n                        s0 = peg$parsepluralElement();\n                        if (s0 === peg$FAILED) {\n                            s0 = peg$parseselectElement();\n                            if (s0 === peg$FAILED) {\n                                s0 = peg$parsepoundElement();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return s0;\n    }\n    function peg$parsemessageText() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        peg$savedPos = peg$currPos;\n        s1 = peg$c2();\n        if (s1) {\n            s1 = undefined;\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parsedoubleApostrophes();\n            if (s3 === peg$FAILED) {\n                s3 = peg$parsequotedString();\n                if (s3 === peg$FAILED) {\n                    s3 = peg$parseunquotedString();\n                    if (s3 === peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 60) {\n                            s3 = peg$c3;\n                            peg$currPos++;\n                        }\n                        else {\n                            s3 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c4);\n                            }\n                        }\n                    }\n                }\n            }\n            if (s3 !== peg$FAILED) {\n                while (s3 !== peg$FAILED) {\n                    s2.push(s3);\n                    s3 = peg$parsedoubleApostrophes();\n                    if (s3 === peg$FAILED) {\n                        s3 = peg$parsequotedString();\n                        if (s3 === peg$FAILED) {\n                            s3 = peg$parseunquotedString();\n                            if (s3 === peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 60) {\n                                    s3 = peg$c3;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s3 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c4);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c5(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = [];\n            s2 = peg$parsedoubleApostrophes();\n            if (s2 === peg$FAILED) {\n                s2 = peg$parsequotedString();\n                if (s2 === peg$FAILED) {\n                    s2 = peg$parseunquotedString();\n                    if (s2 === peg$FAILED) {\n                        s2 = peg$parsenonTagStartingAngleBracket();\n                    }\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                while (s2 !== peg$FAILED) {\n                    s1.push(s2);\n                    s2 = peg$parsedoubleApostrophes();\n                    if (s2 === peg$FAILED) {\n                        s2 = peg$parsequotedString();\n                        if (s2 === peg$FAILED) {\n                            s2 = peg$parseunquotedString();\n                            if (s2 === peg$FAILED) {\n                                s2 = peg$parsenonTagStartingAngleBracket();\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c5(s1);\n            }\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parsenonTagStartingAngleBracket() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        peg$silentFails++;\n        s2 = peg$parseopeningTag();\n        if (s2 === peg$FAILED) {\n            s2 = peg$parseclosingTag();\n            if (s2 === peg$FAILED) {\n                s2 = peg$parseselfClosingTag();\n            }\n        }\n        peg$silentFails--;\n        if (s2 === peg$FAILED) {\n            s1 = undefined;\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 60) {\n                s2 = peg$c3;\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c4);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c6();\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseliteralElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        s1 = peg$parsemessageText();\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c7(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsepoundElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 35) {\n            s1 = peg$c8;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c9);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c10();\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsetagElement() {\n        var s0, s1, s2, s3;\n        peg$silentFails++;\n        s0 = peg$parseselfClosingTag();\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseopeningTag();\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessage();\n                if (s2 !== peg$FAILED) {\n                    s3 = peg$parseclosingTag();\n                    if (s3 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c12(s1, s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c11);\n            }\n        }\n        return s0;\n    }\n    function peg$parseselfClosingTag() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 60) {\n            s2 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsevalidTag();\n            if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                    if (input.substr(peg$currPos, 2) === peg$c13) {\n                        s5 = peg$c13;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c14);\n                        }\n                    }\n                    if (s5 !== peg$FAILED) {\n                        s2 = [s2, s3, s4, s5];\n                        s1 = s2;\n                    }\n                    else {\n                        peg$currPos = s1;\n                        s1 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c15(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseopeningTag() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 60) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsevalidTag();\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 62) {\n                    s3 = peg$c16;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c17);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c18(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseclosingTag() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c20);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsevalidTag();\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 62) {\n                    s3 = peg$c16;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c17);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c18(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseargumentElement() {\n        var s0, s1, s2, s3, s4, s5;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                            s5 = peg$c24;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c25);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c26(s3);\n                            s0 = s1;\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c21);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonId() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsewhiteSpace();\n        if (s4 === peg$FAILED) {\n            if (peg$c28.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c29);\n                }\n            }\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c30);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsewhiteSpace();\n                if (s4 === peg$FAILED) {\n                    if (peg$c28.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c29);\n                        }\n                    }\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c30);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c27);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonTokenOption() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 47) {\n            s1 = peg$c32;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c33);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c34(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c31);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonToken() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                s4 = peg$parsenumberSkeletonTokenOption();\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    s4 = peg$parsenumberSkeletonTokenOption();\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c36(s2, s3);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c35);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeleton() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsenumberSkeletonToken();\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsenumberSkeletonToken();\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c37(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsenumberArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c38) {\n            s1 = peg$c38;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c39);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c40(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s1 = peg$c41();\n            if (s1) {\n                s1 = undefined;\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessageText();\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c42(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c45) {\n                                    s7 = peg$c45;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c46);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsenumberArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c24;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c25);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c47(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonLiteral() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c48;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c49);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parsedoubleApostrophes();\n            if (s3 === peg$FAILED) {\n                if (peg$c50.test(input.charAt(peg$currPos))) {\n                    s3 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c51);\n                    }\n                }\n            }\n            if (s3 !== peg$FAILED) {\n                while (s3 !== peg$FAILED) {\n                    s2.push(s3);\n                    s3 = peg$parsedoubleApostrophes();\n                    if (s3 === peg$FAILED) {\n                        if (peg$c50.test(input.charAt(peg$currPos))) {\n                            s3 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s3 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c51);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 39) {\n                    s3 = peg$c48;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c49);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s1 = [s1, s2, s3];\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = [];\n            s1 = peg$parsedoubleApostrophes();\n            if (s1 === peg$FAILED) {\n                if (peg$c52.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c53);\n                    }\n                }\n            }\n            if (s1 !== peg$FAILED) {\n                while (s1 !== peg$FAILED) {\n                    s0.push(s1);\n                    s1 = peg$parsedoubleApostrophes();\n                    if (s1 === peg$FAILED) {\n                        if (peg$c52.test(input.charAt(peg$currPos))) {\n                            s1 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c53);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonPattern() {\n        var s0, s1;\n        s0 = [];\n        if (peg$c54.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c55);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            while (s1 !== peg$FAILED) {\n                s0.push(s1);\n                if (peg$c54.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c55);\n                    }\n                }\n            }\n        }\n        else {\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeleton() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        s2 = [];\n        s3 = peg$parsedateTimeSkeletonLiteral();\n        if (s3 === peg$FAILED) {\n            s3 = peg$parsedateTimeSkeletonPattern();\n        }\n        if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$parsedateTimeSkeletonLiteral();\n                if (s3 === peg$FAILED) {\n                    s3 = peg$parsedateTimeSkeletonPattern();\n                }\n            }\n        }\n        else {\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            s1 = input.substring(s1, peg$currPos);\n        }\n        else {\n            s1 = s2;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c56(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsedateOrTimeArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c38) {\n            s1 = peg$c38;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c39);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsedateTimeSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c40(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s1 = peg$c57();\n            if (s1) {\n                s1 = undefined;\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessageText();\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c42(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsedateOrTimeFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 4) === peg$c58) {\n                                    s7 = peg$c58;\n                                    peg$currPos += 4;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c59);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 4) === peg$c60) {\n                                        s7 = peg$c60;\n                                        peg$currPos += 4;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c61);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsedateOrTimeArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c24;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c25);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c47(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsesimpleFormatElement() {\n        var s0;\n        s0 = peg$parsenumberFormatElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parsedateOrTimeFormatElement();\n        }\n        return s0;\n    }\n    function peg$parsepluralElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c62) {\n                                    s7 = peg$c62;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c63);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 13) === peg$c64) {\n                                        s7 = peg$c64;\n                                        peg$currPos += 13;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c65);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = peg$currPos;\n                                                if (input.substr(peg$currPos, 7) === peg$c66) {\n                                                    s12 = peg$c66;\n                                                    peg$currPos += 7;\n                                                }\n                                                else {\n                                                    s12 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c67);\n                                                    }\n                                                }\n                                                if (s12 !== peg$FAILED) {\n                                                    s13 = peg$parse_();\n                                                    if (s13 !== peg$FAILED) {\n                                                        s14 = peg$parsenumber();\n                                                        if (s14 !== peg$FAILED) {\n                                                            s12 = [s12, s13, s14];\n                                                            s11 = s12;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s11;\n                                                            s11 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s11;\n                                                        s11 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s11;\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 === peg$FAILED) {\n                                                    s11 = null;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        s13 = [];\n                                                        s14 = peg$parsepluralOption();\n                                                        if (s14 !== peg$FAILED) {\n                                                            while (s14 !== peg$FAILED) {\n                                                                s13.push(s14);\n                                                                s14 = peg$parsepluralOption();\n                                                            }\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            s14 = peg$parse_();\n                                                            if (s14 !== peg$FAILED) {\n                                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                                    s15 = peg$c24;\n                                                                    peg$currPos++;\n                                                                }\n                                                                else {\n                                                                    s15 = peg$FAILED;\n                                                                    if (peg$silentFails === 0) {\n                                                                        peg$fail(peg$c25);\n                                                                    }\n                                                                }\n                                                                if (s15 !== peg$FAILED) {\n                                                                    peg$savedPos = s0;\n                                                                    s1 = peg$c68(s3, s7, s11, s13);\n                                                                    s0 = s1;\n                                                                }\n                                                                else {\n                                                                    peg$currPos = s0;\n                                                                    s0 = peg$FAILED;\n                                                                }\n                                                            }\n                                                            else {\n                                                                peg$currPos = s0;\n                                                                s0 = peg$FAILED;\n                                                            }\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseselectElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c69) {\n                                    s7 = peg$c69;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c70);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = [];\n                                                s12 = peg$parseselectOption();\n                                                if (s12 !== peg$FAILED) {\n                                                    while (s12 !== peg$FAILED) {\n                                                        s11.push(s12);\n                                                        s12 = peg$parseselectOption();\n                                                    }\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        if (input.charCodeAt(peg$currPos) === 125) {\n                                                            s13 = peg$c24;\n                                                            peg$currPos++;\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                            if (peg$silentFails === 0) {\n                                                                peg$fail(peg$c25);\n                                                            }\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            peg$savedPos = s0;\n                                                            s1 = peg$c71(s3, s11);\n                                                            s0 = s1;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralRuleSelectValue() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 61) {\n            s2 = peg$c72;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c73);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsenumber();\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseargName();\n        }\n        return s0;\n    }\n    function peg$parseselectOption() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargName();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c22;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c23);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s5 = peg$c74(s2);\n                        if (s5) {\n                            s5 = undefined;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parsemessage();\n                            if (s6 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                    s7 = peg$c24;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c25);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c75(s2, s6);\n                                    s0 = s1;\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralOption() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsepluralRuleSelectValue();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c22;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c23);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s5 = peg$c76(s2);\n                        if (s5) {\n                            s5 = undefined;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parsemessage();\n                            if (s6 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                    s7 = peg$c24;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c25);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c77(s2, s6);\n                                    s0 = s1;\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsewhiteSpace() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c79.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c80);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c78);\n            }\n        }\n        return s0;\n    }\n    function peg$parsepatternSyntax() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c82.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c83);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c81);\n            }\n        }\n        return s0;\n    }\n    function peg$parse_() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsewhiteSpace();\n        while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$parsewhiteSpace();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c84);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumber() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n            s1 = peg$c86;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c87);\n            }\n        }\n        if (s1 === peg$FAILED) {\n            s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargNumber();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c88(s1, s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c85);\n            }\n        }\n        return s0;\n    }\n    function peg$parseapostrophe() {\n        var s0, s1;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s0 = peg$c48;\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c49);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c89);\n            }\n        }\n        return s0;\n    }\n    function peg$parsedoubleApostrophes() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c91) {\n            s1 = peg$c91;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c92);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c93();\n        }\n        s0 = s1;\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c90);\n            }\n        }\n        return s0;\n    }\n    function peg$parsequotedString() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c48;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c49);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseescapedChar();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$currPos;\n                s4 = [];\n                if (input.substr(peg$currPos, 2) === peg$c91) {\n                    s5 = peg$c91;\n                    peg$currPos += 2;\n                }\n                else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c92);\n                    }\n                }\n                if (s5 === peg$FAILED) {\n                    if (peg$c50.test(input.charAt(peg$currPos))) {\n                        s5 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c51);\n                        }\n                    }\n                }\n                while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    if (input.substr(peg$currPos, 2) === peg$c91) {\n                        s5 = peg$c91;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c92);\n                        }\n                    }\n                    if (s5 === peg$FAILED) {\n                        if (peg$c50.test(input.charAt(peg$currPos))) {\n                            s5 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c51);\n                            }\n                        }\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = input.substring(s3, peg$currPos);\n                }\n                else {\n                    s3 = s4;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 39) {\n                        s4 = peg$c48;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c49);\n                        }\n                    }\n                    if (s4 === peg$FAILED) {\n                        s4 = null;\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c94(s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseunquotedString() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.length > peg$currPos) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c30);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s3 = peg$c95(s2);\n            if (s3) {\n                s3 = undefined;\n            }\n            else {\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 10) {\n                s1 = peg$c96;\n                peg$currPos++;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c97);\n                }\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseescapedChar() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.length > peg$currPos) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c30);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s3 = peg$c98(s2);\n            if (s3) {\n                s3 = undefined;\n            }\n            else {\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseargNameOrNumber() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parseargNumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parseargName();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c99);\n            }\n        }\n        return s0;\n    }\n    function peg$parsevalidTag() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parseargNumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parsetagName();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c100);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargNumber() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 48) {\n            s1 = peg$c102;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c103);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c104();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$currPos;\n            if (peg$c105.test(input.charAt(peg$currPos))) {\n                s2 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c106);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                if (peg$c107.test(input.charAt(peg$currPos))) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c108);\n                    }\n                }\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    if (peg$c107.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c108);\n                        }\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s2 = [s2, s3];\n                    s1 = s2;\n                }\n                else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c109(s1);\n            }\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c101);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargName() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsewhiteSpace();\n        if (s4 === peg$FAILED) {\n            s4 = peg$parsepatternSyntax();\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c30);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsewhiteSpace();\n                if (s4 === peg$FAILED) {\n                    s4 = peg$parsepatternSyntax();\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c30);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c110);\n            }\n        }\n        return s0;\n    }\n    function peg$parsetagName() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        if (input.charCodeAt(peg$currPos) === 45) {\n            s2 = peg$c86;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c87);\n            }\n        }\n        if (s2 === peg$FAILED) {\n            s2 = peg$currPos;\n            s3 = peg$currPos;\n            peg$silentFails++;\n            s4 = peg$parsewhiteSpace();\n            if (s4 === peg$FAILED) {\n                s4 = peg$parsepatternSyntax();\n            }\n            peg$silentFails--;\n            if (s4 === peg$FAILED) {\n                s3 = undefined;\n            }\n            else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c30);\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = [s3, s4];\n                    s2 = s3;\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                if (input.charCodeAt(peg$currPos) === 45) {\n                    s2 = peg$c86;\n                    peg$currPos++;\n                }\n                else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c87);\n                    }\n                }\n                if (s2 === peg$FAILED) {\n                    s2 = peg$currPos;\n                    s3 = peg$currPos;\n                    peg$silentFails++;\n                    s4 = peg$parsewhiteSpace();\n                    if (s4 === peg$FAILED) {\n                        s4 = peg$parsepatternSyntax();\n                    }\n                    peg$silentFails--;\n                    if (s4 === peg$FAILED) {\n                        s3 = undefined;\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                    if (s3 !== peg$FAILED) {\n                        if (input.length > peg$currPos) {\n                            s4 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s4 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c30);\n                            }\n                        }\n                        if (s4 !== peg$FAILED) {\n                            s3 = [s3, s4];\n                            s2 = s3;\n                        }\n                        else {\n                            peg$currPos = s2;\n                            s2 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c111);\n            }\n        }\n        return s0;\n    }\n    var messageCtx = ['root'];\n    function isNestedMessageText() {\n        return messageCtx.length > 1;\n    }\n    function isInPluralOption() {\n        return messageCtx[messageCtx.length - 1] === 'plural';\n    }\n    function insertLocation() {\n        return options && options.captureLocation ? {\n            location: location()\n        } : {};\n    }\n    var ignoreTag = options && options.ignoreTag;\n    var shouldParseSkeleton = options && options.shouldParseSkeleton;\n    peg$result = peg$startRuleFunction();\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n        return peg$result;\n    }\n    else {\n        if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n            peg$fail(peg$endExpectation());\n        }\n        throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length\n            ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n            : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n}\nexport var pegParse = peg$parse;\n","import { __spreadArrays } from \"tslib\";\nimport { isPluralElement, isLiteralElement, isSelectElement, } from './types';\nimport { pegParse } from './parser';\nvar PLURAL_HASHTAG_REGEX = /(^|[^\\\\])#/g;\n/**\n * Whether to convert `#` in plural rule options\n * to `{var, number}`\n * @param el AST Element\n * @param pluralStack current plural stack\n */\nexport function normalizeHashtagInPlural(els) {\n    els.forEach(function (el) {\n        // If we're encountering a plural el\n        if (!isPluralElement(el) && !isSelectElement(el)) {\n            return;\n        }\n        // Go down the options and search for # in any literal element\n        Object.keys(el.options).forEach(function (id) {\n            var _a;\n            var opt = el.options[id];\n            // If we got a match, we have to split this\n            // and inject a NumberElement in the middle\n            var matchingLiteralElIndex = -1;\n            var literalEl = undefined;\n            for (var i = 0; i < opt.value.length; i++) {\n                var el_1 = opt.value[i];\n                if (isLiteralElement(el_1) && PLURAL_HASHTAG_REGEX.test(el_1.value)) {\n                    matchingLiteralElIndex = i;\n                    literalEl = el_1;\n                    break;\n                }\n            }\n            if (literalEl) {\n                var newValue = literalEl.value.replace(PLURAL_HASHTAG_REGEX, \"$1{\" + el.value + \", number}\");\n                var newEls = pegParse(newValue);\n                (_a = opt.value).splice.apply(_a, __spreadArrays([matchingLiteralElIndex, 1], newEls));\n            }\n            normalizeHashtagInPlural(opt.value);\n        });\n    });\n}\n","import { __assign } from \"tslib\";\nimport { pegParse } from './src/parser';\nimport { normalizeHashtagInPlural } from './src/normalize';\nexport * from './src/types';\nexport * from './src/parser';\nexport function parse(input, opts) {\n    opts = __assign({ normalizeHashtagInPlural: true, shouldParseSkeleton: true }, (opts || {}));\n    var els = pegParse(input, opts);\n    if (opts.normalizeHashtagInPlural) {\n        normalizeHashtagInPlural(els);\n    }\n    return els;\n}\n"],"sourceRoot":""}